@page "/add"
@inject NavigationManager navMn
@inject HttpClient client
@using Newtonsoft.Json;
@using System.Text.Json.Serialization;
@using TaskBlazor.Models
@using System.Net

<center>
    <h3>New Task</h3>
</center>


<EditForm Model="taskModel">
    <DataAnnotationsValidator />
    <hr />
    <div class="form-group row">
        <label for="title" class="col-sm-2 col-form-label">
            Title
        </label>
        <div class="col-sm-10">
            <InputText id="title" class="form-control" placeholder="Task title"
            @bind-Value="taskModel.Title" />
            <ValidationMessage For="@(() => taskModel.Title)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="description" class="col-sm-2 col-form-label">
            Description
        </label>
        <div class="col-sm-10">
            <InputTextArea id="description" class="form-control" placeholder="Description"
            @bind-Value="taskModel.Description" />
            <ValidationMessage For="@(() => taskModel.Description)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="email" class="col-sm-2 col-form-label">
            Deadline
        </label>
        <div class="col-sm-10">
            <InputDate id="email" class="form-control" placeholder="Deadline"
            @bind-Value="taskModel.Deadline" />
            <ValidationMessage For="@(() => taskModel.Deadline)" />
        </div>
    </div>
    <center>
        <button class="form-control btn btn-success" type="button" @onclick="async () => await Register()" style="width:40%;">Add task</button>
    </center>
    
</EditForm>


@code {
    public TaskModel taskModel = new TaskModel();

    private async Task Register()
    {
        var response = await client.PostAsJsonAsync("http://localhost:7701/api/Task", taskModel);

        if(response.StatusCode != System.Net.HttpStatusCode.Created)
        {
            
        }

        if (response.IsSuccessStatusCode)
        {
            navMn.NavigateTo("/tasks");
        }
    }

}
