@page "/add"
@inject NavigationManager navMn
@inject HttpClient client
@using Newtonsoft.Json;
@using System.Text.Json.Serialization;
@using TaskBlazor.Models
@using System.Net

<center>
    <h3>New Task</h3>
</center><br />

<EditForm Model="taskModel">
    <DataAnnotationsValidator />
    <hr />
    <div class="row">
            <div class="col">
                <label for="title" class="col-sm-2 col-form-label">
                    Title
                </label>
                <div class="mb-sm-10">
                    <InputText id="title" class="form-control" placeholder="Task title"
                    @bind-Value="taskModel.Title" />
                    <ValidationMessage For="@(() => taskModel.Title)" />
                </div>
            </div>
            <div class="col">
                <label for="email" class="col-sm-2 col-form-label">
                    Deadline
                </label>
                <div class="mb-sm-10">
                    <InputDate Type="InputDateType.DateTimeLocal" class="form-control" placeholder="Deadline"
                    @bind-Value="taskModel.Deadline" />
                    <ValidationMessage For="@(() => taskModel.Deadline)" />
                </div>
            </div>
    </div>

    <div class="mb-3">
            <label for="description" class="col-sm-2 col-form-label">
                Description
            </label>
            <div class="mb-sm-10">
                <InputTextArea id="description" class="form-control" placeholder="Description"
                @bind-Value="taskModel.Description" />
                <ValidationMessage For="@(() => taskModel.Description)" />
            </div>
    </div>
    <center>
        <button class="form-control btn btn-success" type="button" @onclick="async () => await Register()" style="width:40%;">Add task</button>
    </center>
    
</EditForm>


@code {
    public TaskModel taskModel = new TaskModel();

    private async Task Register()
    {
        var response = await client.PostAsJsonAsync("http://localhost:7701/api/Task", taskModel);

        if(response.StatusCode != System.Net.HttpStatusCode.Created)
        {
            
        }

        if (response.IsSuccessStatusCode)
        {
            navMn.NavigateTo("/tasks");
        }
    }

}
